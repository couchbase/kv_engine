#+TITLE:     EP Parameters
#+AUTHOR:    Dustin Sallings
#+EMAIL:     dustin@spy.net
#+DATE:      2010-05-05 Wed
#+DESCRIPTION:
#+LANGUAGE:  en
#+OPTIONS:   H:3 num:t toc:t \n:nil @:t ::t |:t ^:nil -:t f:t *:t <:t
#+OPTIONS:   TeX:t LaTeX:nil skip:nil d:nil todo:t pri:nil tags:not-in-toc
#+INFOJS_OPT: view:nil toc:nil ltoc:t mouse:underline buttons:0 path:http://orgmode.org/org-info.js
#+EXPORT_SELECT_TAGS: export
#+EXPORT_EXCLUDE_TAGS: noexport

* Configuring the Engine

Engine parameters may be specified using the =-e= option to
memcached.  These parameters control various aspects of the behavior
of the engine.

For example, if you would like to store your database in =/data/base=
and prevent it from having objects larger than 1MB, you would run
memcached like this:

: memcached -E ep.so -e 'dbfile=/data/base;max_item_size=1048576'

* Parameters for the EP Engine

| key                            | type   | descr                                      |
|--------------------------------+--------+--------------------------------------------|
| dbname                         | string | Path to on-disk storage.                   |
| ht_locks                       | int    | Number of locks per hash table.            |
| ht_size                        | int    | Number of buckets per hash table.          |
| max_item_size                  | int    | Maximum number of bytes allowed for        |
|                                |        | an item.                                   |
| max_size                       | int    | Max cumulative item size in bytes.         |
| max_threads                    | int    | Override default number of global threads. |
| mem_high_wat                   | int    | Automatically evict when exceeding         |
|                                |        | this size.                                 |
| mem_low_wat                    | int    | Low water mark to aim for when evicting.   |
| warmup                         | bool   | Whether to load existing data at startup.  |
| ep_exp_pager_enabled           | bool   | Whether the expiry pager is enabled.       |
| exp_pager_stime                | int    | Sleep time for the pager that purges       |
|                                |        | expired objects from memory and disk       |
| failpartialwarmup              | bool   | If false, continue running after failing   |
|                                |        | to load some records.                      |
| max_vbuckets                   | int    | Maximum number of vbuckets expected (1024) |
| concurrentDB                   | bool   | True (default) if concurrent DB reads are  |
|                                |        | permitted where possible.                  |
| chk_remover_stime              | int    | Interval for the checkpoint remover that   |
|                                |        | purges closed unreferenced checkpoints.    |
| max_checkpoints                | int    | Number of max checkpoints allowed per      |
|                                |        | vbucket                                    |
| bf_resident_threshold          | float  | Resident item threshold for only memory    |
|                                |        | backfill to be kicked off                  |
| bfilter_enabled                | bool   | Bloom filter enabled or disabled           |
| bfilter_residency_threshold    | float  | Resident ratio threshold for full eviction |
|                                |        | policy after which bloom filter switches   |
|                                |        | mode from accounting just deletes and non  |
|                                |        | resident items to all items                |
| getl_default_timeout           | int    | The default timeout for a getl lock in (s) |
| getl_max_timeout               | int    | The maximum timeout for a getl lock in (s) |
| backfill_mem_threshold         | float  | Memory threshold on the current bucket     |
|                                |        | quota before backfill task is made to back |
|                                |        | off                                        |
|                                |        | quota after which compaction will not queue|
|                                |        | expired items for deletion.                |
| mutation_mem_ratio             | float  | Memory ratio of the current bucket         |
|                                |        | quota for accepting a new mutation         |
| compaction_write_queue_cap     | int    | The maximum size of the disk write queue   |
|                                |        | after which compaction tasks would snooze, |
|                                |        | if there are already pending tasks.        |
| dcp_min_compression_ratio      | float  | Minimum compression ratio for compressed   |
|                                |        | doc against original doc. If compressed doc|
|                                |        | is greater than this percentage of the     |
|                                |        | original doc, then the doc will be shipped |
|                                |        | as is by the DCP producer if value         |
|                                |        | compression were enabled by the consumer.  |
| replication_throttle_queue_cap | int    | The maximum size of the disk write queue   |
|                                |        | to throttle down tap-based replication. -1 |
|                                |        | means don't throttle.                      |
| replication_throttle_cap_pcnt  | int    | Percentage of total items in write queue   |
|                                |        | to throttle tap input. 0 means use fixed   |
|                                |        | throttle queue cap.                        |
| data_traffic_enabled           | bool   | True if we want to enable data traffic     |
|                                |        | immediately after warmup completion        |
| access_scanner_enabled         | bool   | True if access scanner task is enabled     |
| alog_sleep_time                | int    | Interval of access scanner task in (min)   |
| alog_task_time                 | int    | Hour (0~23) in GMT time at which access    |
|                                |        | scanner will be scheduled to run.          |
| alog_resident_ratio_threshold  | int    | Resident ratio percentage above which we   |
|                                |        | do not generate access log.                |
| warmup_min_memory_threshold    | int    | Memory threshold (%) during warmup to      |
|                                |        | enable traffic.                            |
| warmup_min_items_threshold     | int    | Item num threshold (%) during warmup to    |
|                                |        | enable traffic.                            |
| conflict_resolution_type       | string | Specifies the type of xdcr conflict        |
|                                |        | resolution to use                          |
| item_eviction_policy           | string | Item eviction policy used by the item      |
|                                |        | pager (value_only or full_eviction)        |
