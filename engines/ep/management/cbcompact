#!/usr/bin/env python3

"""

  Copyright 2013-Present Couchbase, Inc.

Use of this software is governed by the Business Source License included in
the file licenses/BSL-Couchbase.txt.  As of the Change Date specified in that
file, in accordance with the Business Source License, use of this software will
be governed by the Apache License, Version 2.0, included in the file
licenses/APL2.txt.

"""

# Example Usage for local host..
# install/bin/cbcompact 127.0.0.1:12000 compact -b beer-sample 799
#   where 12000 is memcached port and 799 is vbucket id

import cli_auth_utils
from time import sleep
import sys
import mc_bin_client


def cmd(f):
    f = cli_auth_utils.cmd_decorator(f)

    def g(*args, **kwargs):
        mc = args[0]

        try:
            vbucket = int(args[1])
        except IndexError:
            print("Must specify a vbucket id after the compact argument")
            sys.exit(1)

        # These arguments are /always/ in kwargs, but if they are not specified
        # on the command line will have the value None.
        purgeBeforeTs = int(kwargs.pop('purgeBeforeTs') or 0)
        purgeBeforeSeq = int(kwargs.pop('purgeBeforeSeq') or 0)
        dropDeletes = int(kwargs.pop('dropDeletes') or 0)

        f(mc, vbucket, purgeBeforeTs, purgeBeforeSeq, dropDeletes, **kwargs)
    return g


@cmd
def compact(mc, vbucket, purgeBeforeTs, purgeBeforeSeq, dropDeletes):
    try:
        return mc.compact_db(vbucket, purgeBeforeTs, purgeBeforeSeq,
                             dropDeletes)
    except BaseException:
        print("Unable to compact vbucket %d with the following parameters "
              "(purge before time: %d, purge before seqno: %d, drop deletes: "
              "%d) in requested engine."
              % (vbucket, purgeBeforeTs, purgeBeforeSeq, dropDeletes))


def main():
    c = cli_auth_utils.get_authed_clitool()

    c.addCommand('compact', compact, 'compact vbucketid')
    c.addOption('--purge-before', 'purgeBeforeTs',
                'purge documents before this timestamp')
    c.addOption('--purge-only-upto-seq', 'purgeBeforeSeq',
                'purge only upto this document sequence number')
    c.addFlag('--dropdeletes', 'dropDeletes', 'drop deleted items')

    c.execute()


if __name__ == '__main__':
    main()
