//
//     Copyright 2020-Present Couchbase, Inc.
//
//   Use of this software is governed by the Business Source License included
//   in the file licenses/BSL-Couchbase.txt.  As of the Change Date specified
//   in that file, in accordance with the Business Source License, use of this
//   software will be governed by the Apache License, Version 2.0, included in
//   the file licenses/APL2.txt.
//

//
// Flatbuffer types used in the serialisation of the Collections::Manifest
// object. These are used to store as a file a copy of the current manifest
// and use it in warm-up.
//

namespace Collections.Persist;

table Collection {
    collectionId:uint;
    ttlValid:bool;
    maxTtl:uint;
    name:string;
    metered:bool;
}

table ScopeLimits {
    dataSizeEnabled:bool = false;
    dataSize:uint64 = 0;
    dataSizeClusterValue:uint64 = 0;
}

table Scope {
    scopeId:uint;
    name:string;
    collections:[Collection];
    limits:ScopeLimits;
}

table Manifest {
    uid:ulong;
    // The following parameter was previously used to store a "force" flag.
    // The force flag was never actually used and has now been removed from
    // the collection code. This bool is now unused and is available for future
    // use.
    unused:bool;
    scopes:[Scope];
}

table ManifestWithCrc {
   crc:uint;
   manifest:[ubyte];
}

// This is the main type representing a Collections::Manifest
root_type Manifest;
// This wraps the flatbuffer Manifest with a CRC for integrity checking
root_type ManifestWithCrc;