//
//     Copyright 2019-Present Couchbase, Inc.
//
//   Use of this software is governed by the Business Source License included
//   in the file licenses/BSL-Couchbase.txt.  As of the Change Date specified
//   in that file, in accordance with the Business Source License, use of this
//   software will be governed by the Apache License, Version 2.0, included in
//   the file licenses/APL2.txt.
//

// Schema for the value of collection system events

namespace Collections.VB;

// FlatBuffers SystemEvents: This is the structure used by CreateCollection and
// ModifyCollection
table Collection {
    // The following fields all exist with the "epoch" of collections, 7.0+
    uid:ulong;
    scopeId:uint;
    collectionId:uint;
    ttlValid:bool;
    maxTtl:uint;
    name:string;
    // All fields after here are added from 7.2
    //
    // history: MB-54516: added in neo (7.2) branch. If this field is not part
    // of a Collection structure it is defaulted to false.
    history:bool = false;

    // All fields after here are added from 7.2.4
    //
    // defaultCollectionMVS: MB-59452: This field exists to assist in the
    // tracking of what is the max-visible seqno of the default collection. This
    // field is only written to when the event is a modification of the default
    // collection and serves no purpose outside of KV-engine.
    defaultCollectionMVS:ulong = 0;

    // All fields after here are added from 7.6
    //
    // metered: MB-51979: The default is false - for all collections which exist
    // and didn't define this value, metering must be enabled only by a change
    // pushed from ns_server
    metered:bool = false;

    // Warning: When merging/changing the tables. Always check all callers to
    // Collections::VB::CreateCollection and check that parameters are ordered
    // correctly - this is critical if inserting a field before another and when
    // the fields define a default value. Note that the default values become
    // default parameters and it's too easy to get the order wrong and for the
    // compiler to happily allow an int/bool in the wrong place.
}

// FlatBuffers SystemEvents: This is the structure used by DropCollection
table DroppedCollection {
    // The following fields all exist with the "epoch" of collections, 7.0+
    uid:ulong;
    scopeId:uint;
    collectionId:uint;
}

// FlatBuffers SystemEvents: This is the structure used by CreateScope
table Scope {
    // The following fields all exist with the "epoch" of collections, 7.0+
    uid:ulong;
    scopeId:uint;
    name:string;
}

// FlatBuffers SystemEvents: This is the structure used by DropScope
table DroppedScope {
    // The following fields all exist with the "epoch" of collections, 7.0+
    uid:ulong;
    scopeId:uint;
}

root_type Collection;
root_type DroppedCollection;
root_type Scope;
root_type DroppedScope;